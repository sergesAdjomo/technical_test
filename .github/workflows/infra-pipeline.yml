name: Infrastructure Pipeline

on:
  push:
    paths:
      - 'infra/**'
    branches: [ main, develop ]
  workflow_dispatch:

env:
  PROJECT_ID: e-datacap
  REGION: us-central1
  SERVICE_ACCOUNT: terraform-sa@e-datacap.iam.gserviceaccount.com

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          
      - uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=edata-terraform-tfstate-files" \
            -backend-config="prefix=terraform/tfstate"

      - name: Terraform Format
        run: |
          terraform fmt -recursive
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git diff --quiet && git diff --staged --quiet || git commit -m "style: auto-format terraform files"
          git push
      
      - name: Terraform Plan
        run: terraform plan -var="project_id=${{ env.PROJECT_ID }}" -var="region=${{ env.REGION }}"
        
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -var="project_id=${{ env.PROJECT_ID }}" -var="region=${{ env.REGION }}"